<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAQAAEABABoCgAAFgAAACgAAABAAAAAgAAAAAEABAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeIiIiIiIiIiIiIiIiIiIhwAAAAAAAAAAAAAAAAAAAAB/
        ///////////////////4cAAAAACIgAAAAAAAAAAAAAf3B3B3B3B3B3B3B3B3B3eHAAAACIiIAAAAAAAA
        AAAAAH9w9w9w9w9w9w9w9w9w8HhwAACIiIiAAAAAAAAAAAAAB/cPcPcPcPcPcPcPcPcPB4cACIiIiIgA
        AAAAAAAAAAAAf3D3D3D3D3D3D3D3D3DwCACIiIiIiIAAAAAAAAAAAAAAf4iIiIiIiIiIiIiIiIgACIiI
        iIiI8AAAAAAAAAAAAAB/iACIiIiIiIiIiHiIiACIiIiIiI9wAAAAAAAAAAAAAH+IqoiIiIiIAAAAAACI
        CIiIiIiI93AAAAAAAAAAAAAAf4iIiIiIiIh3d3d3d4CIiIiIiI93cAAAAAAAAAAAAAB/iIiIiIiIiIiI
        iIiID4iIiIiI93dwAAAAAAAAAAAAAH+IiIiIiIiIiIiIiIgI+IiIiI93d3AAAAAAAAAAAAAAf///////
        /////////wiPiIiI93d3cAAAAAAAAAAAAAAHd3d3d3d3d3d3d3d3AIj4iI93dwBwAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAP+I+I93dwgHAAAAAAAAAAAAAAAAd3d3d3d3d3d3d3cPj/CP93dwh3cAAAAAAAAAAA
        AAAAB/iIiIiIiIiIiIgPiIgIh3AAh3dwAAAAAAAAAAAAAAAH+P//////////8PiIgIiHcIh3dwAAAAAA
        AAAAAAAAAAf4BEREREREREQPiIgPiIdwh3dwAAAAAAAAAAAAAAAAB/gMzMzMzMzMwPiIgA+Ih3B3dwAA
        AAAAAAAAAAAAAAAH+AzMzMzMzMwPiIgHDwiHd3dwAAAAAAAAAAAAAAAAAAf4DMzMzMzMx/+IgHcAd4d3
        dwAAAAAAAAAAAAAAAAAAB/gMzMzMzMzA+PgIdwd3h3dwAAAAAAAAAAAAAAAAAAAH+AzMzMzMzMD4gIh3
        B3CHdwAAAAAAAAAAAAAAAAAAAAf4DMzMzMzMwPiAiHcHAIdwAAAAAAAAAAAAAAAAAAAAB/gMzMzMzMzA
        +HeIdwAAAAAAAAAAAAAAAAAAAAAAAAAH+AzMzMzMzMwHdIh3AAAAAAAAAAAAAAAAAAAAAAAAAAf4DOzM
        zMzMzMzEiHcAAAAAAAAAAAAAAAAAAAAAAAAAB/gM7MzMzMzMzMSIdwAAAAAAAAAAAAAAAAAAAAAAAAAH
        +AzMzMzMzMzMxIh3AAAAAAAAAAAAAAAAAAAAAAAAAAf4AAAAAAAAAAAAiHcAAAAAAAAAAAAAAAAAAAAA
        AAAAB/h3d3d3d3d3d3eIdwAAAAAAAAAAAAAAAAAAAAAAAAAH+IiIiIiIiIiIiIh3AAAAAAAAAAAAAAAA
        AAAAAAAAAAB//////////////3cAAAAAAAAAAAAAAAAAAAAAAAAAAAeIiIiIiIiIiIiI9wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAHd3d3d3d3d3d3d3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////gAAAAH////8AAAAAP8f//wAAAAAfg///gAAAAA8B///AA
        AAABgD//+AAAAAEAH//8AAAAAAAP//8AAAAAAA///wAAAAAAD///AAAAAAAP//8AAAAAAA///wAAAAAA
        D///AAAAAAAP//8AAAAAAA///4AAAAAAD///4AAAAAAP///gAAAAAA///+AAAAAAD///4AAAAAAf///g
        AAAAAD///+AAAAAAf///4AAAAAD////gAAAAAf///+AAAAAD////4AAAAAf////gAAAAD////+AAAAEf
        ////4AAAA//////gAAAH/////+AAAAf/////4AAAB//////gAAAH/////+AAAAf/////4AAAB//////w
        AAAH//////gAAAf//////AAAD////////////////////////////////////w==
</value>
  </data>
</root>